#!/usr/bin/env node

var rw = require('rw'),
    minimist = require('minimist'),
    gs = require('../index'),
    dsv = require('d3-dsv').dsv;

var argv = minimist(process.argv.slice(2));

if (!argv.out) {
  argv.out = '/dev/stdout';
}

if (!argv.key) {
  console.error("Please provide a spreadsheet key");
  process.exit();
}

if (argv.id && argv.title) {
  console.error("Please use only --title OR --id");
  process.exit();
}

if (argv.id) {
  gs.getWorksheetById(argv.key, argv.id, handleResponse);
} else if (argv.title) {
  gs.getWorksheet(argv.key, argv.title, handleResponse);
} else {
  gs.getSpreadsheet(argv.key, handleResponse);
}

function handleResponse(err, res) {
  if (err) {
    console.error(err.message);
    process.exit();
  }
  var delimiter = argv.dsv;
  if (argv.csv) {
    delimiter = ',';
  } else if (argv.tsv) {
    delimiter = "\t";
  }

  var data;
  if (delimiter) {
    data = dsv(delimiter).format(res.data);
  } else {
    data = JSON.stringify(res, null, argv.pretty ? 2 : undefined);
  }

  rw.writeFileSync(argv.out, data, 'utf8');    
}